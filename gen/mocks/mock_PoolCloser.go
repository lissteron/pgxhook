// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockPoolCloser is an autogenerated mock type for the PoolCloser type
type MockPoolCloser struct {
	mock.Mock
}

type MockPoolCloser_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPoolCloser) EXPECT() *MockPoolCloser_Expecter {
	return &MockPoolCloser_Expecter{mock: &_m.Mock}
}

// Close provides a mock function with given fields:
func (_m *MockPoolCloser) Close() {
	_m.Called()
}

// MockPoolCloser_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type MockPoolCloser_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
func (_e *MockPoolCloser_Expecter) Close() *MockPoolCloser_Close_Call {
	return &MockPoolCloser_Close_Call{Call: _e.mock.On("Close")}
}

func (_c *MockPoolCloser_Close_Call) Run(run func()) *MockPoolCloser_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPoolCloser_Close_Call) Return() *MockPoolCloser_Close_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockPoolCloser_Close_Call) RunAndReturn(run func()) *MockPoolCloser_Close_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPoolCloser creates a new instance of MockPoolCloser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPoolCloser(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPoolCloser {
	mock := &MockPoolCloser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
